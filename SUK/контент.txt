CMS - компьютерная программа или информационная система, которая используется для организации и обеспечения процесса по совместному созданию, управлению и редактирования содержимого сайта.

Веб-сайт состоит из двух частей: интерфейсной и серверной.

Принцип работы CMS:
1. back-office
2. front-office

Суть работы cms заключена в схеме работы сайта и его дизайна. 

Редактор WYSIWYG - "что видишь, то и получишь".

Первой CMS принято считать Vignette.

Шаблон сайта - заготовка дизайна сайта , "пустые" заготовки дизайна сайта, "пустые" заготовки страница без наполнения их информацией.

Сайты, организованные посредством системы управления контентом, основаны на следующих технологшиях:
1. веб-сервер
2. хранилище данных
3. веб-приложение для обеспечения работы самой системы
4. вузальный редактор страниц
5. файловый менеджер с интерфейсом управления файлами сайта

Достоинства cms:
1. наиболее эфеективные инструменты для решения задач;
2. нет необходимости знать html;
3. работа сайта тестируется множеством пользователей;
4. низкие временные затраты;
5. простое и быстрое изменение сайта;
6. множество встроенных расширений;
7. настраиваемые права для управления контентом;
8. администратор может предоставлять различные права пользователям для просмотра контента;
9. управление сайтом может соуществляться мз любой точки мира с помощью браузера.

Недостатки: 
1. сайты с похожим дизайном;
2. cms-сайты имеют меньшую гибкость;
3. чаще всего становятся объектами атак хакеров;
4. cms могут замедлять работу сайтов.

Хостинг. Виды хостинга
Бывают платные и бесплатные хостинги. По типу предоставляемого ресурса хостинги делятся на:
1. виртуальный хостинг(много сайтов размещаются на одном сервере);
2. виртуальный выделенный сервер(предоставляется место на диске, часть общей памяти и процессорное время сервера);
3. выделенный сервер;
4. колокация(хостинг-провайдер предоставляет место в дата-центре для оборудования).

---------------------------------------------------------------------------------------------------------------------------------------------------------------

                                        Конструктор CMS WORDPRESS

WordPress - свободно распространяемая, соответсвующая стандартам, бытсрая, легкая и бесплатная платформа для персонального блоггинга с практичными настройками
и свойствами по умолчанию и с чрезвычайно гибким и настраиваемым ядром.

Управление и администрирование: 
1. Управление пользователями
2. Профли пользователей
3. Динамическая генерация страниц

Тема позволяет изменить визуальное представление сайта без вмешательства в код. Может включать в себя файлы шаблонов, изображения, таблицы стилей, а ткаже любые другие файлы PHP.

Плагины являются расшиениями функциональности вордпрес, предлагают пользовательские фцуцнкции и сообенности так, что каждый может адаптировать их к своему сайту.
с помощью плагинов можно решать:
1. Обеспечение безопасности сайтов
2. Борьба со спамом
3. Техническая оптимизация ресурса в соответствии с теребованиями поисковых систем.
4. Повышение функциональности и юзабилити ресурса.

Меры безопасности:
1. Двухфакторная аутентификация
2. Логины и пароли
3. Зашифровать все
4. Обновления CMS 

Кэш - промежуточный буфер, который позволяет ускорить работу сайта за счет хранения наиболее часто используемых данных в памяти.

Три вида хэширования:
1. Кэширование страниц(позволяет сохранить результатввыдачи всей страницы целиком, в самом ядре не реализовано).
2. Кэширование объектов(реализовано в самом ядре. Позволяет хранить объекты произвольного типа).
3. Транзитное кэширование(чаще всего используется для хранения объектов, особенно когда речь идет о запросах на внешние ресурсы, 
является постоянным по умолчанию в WordPress и хранит все данные в бд).

Плагины для адаптации под моб. устройства:
1. WPTouch
2. Jetpack
3. WPSmart Mobile
4. Responsible

CMS WORDPRESS (Работа с контентом)

Структура бд
ВП использует ряд таблиц базы данных, связанных между собой - чтобы свести к минимум объем данных, который хранится.

1. Таблицы БД по умолчанию имеют префикс wp_.
2. Основная таблица wp_posts.
3. Две таблицы не связаны ни с одной другой - wp_options, wp_links.
4. Таблицы wp_users и wp_comments не всегда связаны между собой.

Виды контента в WordPress:
1. Сообщения(записи).
2. Комментарии.
3. Пользователи.
4. Ссылки.

СООБЩЕНИЯ
Наиболее важный тип в WP.
Типы записей по умолчанию в WP:
1. Запись
2. Страница
3. Вложение
4. Редакция
5. Элемент меню навигации
Записи по умолчанию выводятся на главных страницах многих тем.
Страницы могут использовать произвольный файл из папки с темой в качестве своего шаблона. Имеют иерархию. Возможность сортировать их по порядку.
Вложения -  тип хоста, преднахначенный для управления файлами, которые загружены через стандартный загрузчик WP, а также для хранения информации о них.

РЕДАКЦИИ
Каждая редакция сохраняется в таблице wp_posts вместе с записью, с которой она связана.
редакция записей - яерновики, сохраняющиеся автоматически в процессе раедактирования записи.
ЭЛЕМЕНТЫ МЕНЮ
Единственный тип, который не используется для работы с контентом.

КОММЕНТАРИИ

Комментарии хранятся в отдельной таблице - wp_comments.
Комментарий может иметь метаданные, прикрепленные через таблицу - wp_commentmeta.
Комментарии связаны друг с другом с помощью поля comment_parent.
Комментарии могут быть связаны с таблицей wp_users.

ПОЛЬЗОВАТЕЛИ

Пользователи имеют свои собственные таблицы wp_users, а такде метаданные в таблице wp_usermeta.

ССЫЛКИ
Работают подобно записям, имеют содержание, им можно присвоить элемент эксаномий.
Имеют свои собственные таблицы wp_links.
Не имеют поля для определения родителя.

ЗАМЕЧАНИЯ ПО МЕТАДАННЫМ
Среди 4 типов контента, три могут содержать прикрепленные метаданные:
1. Записи
2. Комментарии
3. Пользователи

УПРАЛВЕНИЕ ВИДЖЕТАМИ
Независимая подпись содержимого, которую можно размещать предусмотренных вашей темой.
WP виджеты бывают типовые.
Могут создаваться плагинами и темами, а могут бытть определены в админке с пом хтмл-кода.
Роли региона в WP играют сайдбары. Сайдбары необходимо регестрировать в теме в файле functions.php.

-----------------------------------------------------------------------------------------------------------------------

                                       CMS JOOMLA
Joomla - cms, написанное на PHP и JS, использующее в качестве хранилища БД MySQL или другие стандартные реляционные СУБД.
Последняя версия: 4.2.3.
Функциональность можно увеличивать с помощью доп. расширений.
Имеется модуль безопасности для многоуровневой аутентификации пользователей и админов.
Система шаблонов позволяет легок изменить внешний вид сайта: расположение модулей, шрифты и другое.
Основные возможности:
1. Настраиваемые схемы расположения модулей
2. Все компоненты, модули, плагины и шаблоны можно написать самому или отредактировать существубщее расширение по своему усмотрению.
3. Происходит регулярный выход обновлений
4. Многоязычность
5. Поддержка БД
6. Реализована поддержка MSSQL и PostgreSQL
7. Планируется добавить поддержку Oracle, SQLite.

Масштабирование системы:
Структурно система представляет собой ядро, к которому присоединяются компоненты.
Компоненты могут состоять по функциональному назначению из модуля, плагина и/или шаблона.
Ядро Joomla состоит:
1. модулей
2. базовых компонентов
3. плагинов
4. шаблонов
5. менеджеров для управления
В Joomla страница генерируется из вывода html одного компонента, различных модулей и шаблонов.

Уровни доступа к системе:
1. Гость - просмотр сайта и общедоспутных статей.
2. Зарегестрированный пользователь - Привелегии гостевой группы, просмотр статей доступных для пользователей.
3. Автор - привелегии группы зарегестрированнх пользователей, создание новых статей, редактирование собственных статей, просмотр специального контента.
4. Редактор - привелегии группы автора.
5. Издатель

Группы админки:
1. Менеджер
2. Администратор
3. Супер-администратор

Установить расширение можно:
1. Установить из JED
2. Загрука пакета файлов
3. Установка из директория
4. Установка через URL

Тема 5. ОСОБЕННОСТИ РАБОТЫ С КОНТЕНТОМ

Структура контента в cms Joomla:
1. Категории
2. Подкатегории
3. Материал

Две причины использовать категории:
1. Схема блкоов и списков
2. Организация материалов в контенте
Один материал может находиться в 1 категории.

В визуальном редакторе предусмотрена возможность работать в режиме просомотра исходного кода материала. Инструменты: исходный код.

Вставка изображения:
Данная функция в расширенном виде доступна на вкладке "Изображения и ссылки". Просто вставить картинку можно с помощью меню "Вставить" - "Вставить или редактировать содержимое".
Однако вместо загрузки файла такой подход предполагает вставку адреса ссылки, ведущей на рисунок.
На вкладке "Материалы" есть кнопка "Модуль", с помощью которой можно вывести содержимое разного рода прямо материально.

Если Joomla имеет организацию материалов (1. Категории
2. Подкатегории
3. Материал) , то организация меню не обязательно должна быть такой же.

Пункт меню "Блок категории" - пункт меню, при нажатии на который выводится сразу несколько материалов выбранной нами категории.
Можно управлять отбражением статей: "Параметры макета"

Типу пункта меню "Список категорий": "Материалы" - "Категории" - "Выбрать нужную категорию"
При клике по любому из заголовков статей происходит переход на полный текст материалов.
На вкладке "Список" можно указать количество отображаемых ссылок на странице. 

 
На вкладке "Параметры страницы" можно указаить заголовок страницы, который открывается при нажатии на определенный пункт меню.

----------------------------------------------------------------------------------------------------------------------------------------------------------------

                                                             CMS DRUPAL

Поддерживаются MySQL, PostgreSQL и другие.

Drupal - ЯП (PHP), реляционная бд.

Это и система с конструктором, и среда разработки для программистов.
Разработка началась в 2000 году. Создатель - Дрис Бёртан.

Основные понятия:

1. Нода (node)
2. Таксономия (taxonomy)
3. Формат ввода (input format)
4. Блоки (blocks)
5. Права доступа 
6. Меню (menu)

Нода (node) - элемент контента, который основывается на одной и той же базовой структуре (новости, статьи). Может легко расширяться.

Таксономия состоит из 2 элементов - словари и термины.

Формат ввода - определенный набор правил, применяющихся при отображении страницы после ввода содержимого.

Блоки - часть содержимого сайта(виджеты).

Есть 3 версии расширениий и тем: стабильные, альфа-бета, разрабатываемые.

Описание модуля состоит из: название, описание, ссылки на скачивание, статистика, ссылка на документацию.

Блоки путь (управление - структура - схема блоков).
Блоки - некоторая часть программного пространства, контейнер для контента, которому можно задавать расположение.
Прии редактировании блоков есть вкладки с доступными темами; ссылка на страницу демонстрации регионов; область, которую можно поместить блок; кнопка для добавления блока.
Типы блоков: предоставляемые модулями, созданные вручную.
Plugin API - позволяет создавать блоки.
Entity API - повзволяет управлят настройками блоков и определять настройки видимости блока.

Chaos tool suite - удобное API для разработчиков.

Создание модуля:

modules/custonms/[module:name]

[имя модуля].info.yml - отвечает за базовую информацию о модуле.

Создание контроллера, который отвечает за вывод на страницу:

Вссе контроллеры модуля должны находиться по пути: modules/[module:name]/src/Controller

Название файлов с контроллером должны начинаться с большой буквы.

Создаем в корневой папке модуля новую папку: src.

Создаем в папке src новую папку: Controller.

Создаем файл с нашим контроллером HelloWorldController.php.

Создаем файл маршрутизации: имя_модуля.routing/yml

Служит для описания маршрута по базовому шаблону.


В качестве параметров маршрута выступают такие значения, как:

*Заголовок страницы

* URL страницы

* Котроллер

* Права доступа

*и т.д.





